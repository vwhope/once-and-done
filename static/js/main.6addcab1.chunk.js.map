{"version":3,"sources":["components/Header/index.js","components/SubHeader/index.js","components/SubFooter/index.js","components/ImageCard/index.js","components/Footer/index.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","SubHeader","statusMessage","currentScore","topScore","SubFooter","ImageCard","id","value","onClick","clickedImage","src","path","alt","Footer","shuffleArray","array","counter","length","index","Math","floor","random","temp","App","state","result","clicked","Characters","gameOver","_this","includes","resetGame","pointIncrease","push","setState","score","resetCharacterArray","points","newScramble","this","_this2","components_Header","components_SubHeader","map","character","components_ImageCard","key","name","components_SubFooter","components_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6addcab1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n        <p className=\"game-name\">Once-and-Done Game</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport \"../../App.js\";\r\n\r\nfunction SubHeader(props) {\r\n    return (\r\n        <div className=\"sub-header-background\">\r\n            <p className=\"sub-header-static-text\">Click each image, but ONLY ONCE or the game is over!</p>\r\n            <p className=\"status-message\">{props.statusMessage}</p>\r\n            <p className=\"score\">Score: {props.currentScore}</p>\r\n            <p className=\"top-score\">Top Score: {props.topScore}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubHeader;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction SubFooter(props) {\r\n\r\n    return (\r\n        <div className=\"subfooter-background\">\r\n            <p className=\"subfooter-text\">.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubFooter;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImageCard (props) {\r\n  return (\r\n    <div id={props.id} className=\"image-id-clicked\" value={props.id} onClick={() =>\r\n      props.clickedImage(props.id)\r\n      }>\r\n      <div className=\"images\">\r\n          <img src={props.path} className=\"display-image\" alt=\"spongebob character\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p className=\"footer-text\">Once-and-Done Game</p>\r\n        </div>\r\n        );\r\n    }\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\nimport Header from './components/Header';\nimport SubHeader from './components/SubHeader';\nimport SubFooter from './components/SubFooter';\nimport ImageCard from './components/ImageCard';\nimport Footer from './components/Footer';\nimport Characters from './characters.json';\n\n// on click of any image - reshuffle the order in which the images are displayed\nconst shuffleArray = (array) => {\n  let counter = array.length;\n\n  while (counter > 0) {\n    let index = Math.floor(Math.random() * counter);\n    counter--;\n    let temp = array[counter];\n    array[counter] = array[index];\n    array[index] = temp;\n  }\n  return array;\n};\n\nclass App extends Component {\n  // Set initial state for all variable used in game\n  state = {\n    currentScore: 0,\n    topScore: 0,\n    result: \"\",\n    clicked: [],\n    Characters,\n    gameOver: false\n  };\n\n  componentDidMount() {\n    this.setState({result: \"To begin, CLICK any character\"});\n  }\n\n  clickedImage = (id) => {\n    if(!this.state.clicked.includes(id)) {\n      this.pointIncrease();\n      this.state.clicked.push(id);\n      this.setState({\n        gameOver: false\n      });\n    } else {\n      this.resetGame();\n    }\n  }\n\n  pointIncrease = () => {\n    let score = this.state.currentScore + 1;\n\n    if(score === this.state.Characters.length) {\n      this.setState({\n        result: \"Winner!\",\n        topScore: score,\n        currentScore: 0,\n        clicked: [],\n        Characters,\n        gameOver: false\n      });\n    } else if (score > this.state.topScore) {\n      this.setState({\n        topScore: score,\n        currentScore: score,\n        result: \"A NEW High Score!\",\n      });\n    } else {\n      this.setState({\n        currentScore: score,\n        result: \"You did it! Can You Do It Again?\"\n      });\n    }\n     this.resetCharacterArray();\n  }\n\n  resetGame = () => {\n    this.setState({\n      points: 0,\n      currentScore: 0,\n      topScore: this.state.topScore,\n      result: \"SORRY, you clicked a character twice, GAME OVER!\",\n      clicked: [],\n      Characters,\n      gameOver: true\n    });\n    this.resetCharacterArray();\n  }\n\n  resetCharacterArray = () => {\n    let newScramble = shuffleArray(Characters);\n    this.setState({Characters: newScramble})\n  }\n\n  // Map this.state.characters, render an ImageCard component for each character object\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <SubHeader topScore={this.state.topScore} currentScore={this.state.currentScore} statusMessage={this.state.result} />\n        {this.state.Characters.map(character => (\n        <ImageCard\n                    id={character.id}\n                    key={character.id}\n                    name={character.name}\n                    path={character.path}\n                    clickedImage={this.clickedImage}\n        />\n        ))}\n        <SubFooter />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}